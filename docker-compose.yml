version: "3.6"

services:
        socket-proxy:
                image: tecnativa/docker-socket-proxy
                container_name: socket-proxy
                restart: unless-stopped
                privileged: true
                networks:
                        - proxy
                environment:
                        CONTAINERS: 1
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock:ro

        traefik:
                image: traefik:v2.2
                container_name: traefik
                restart: unless-stopped
                command:
                        - "--api.insecure=true"
                        - --providers.docker=true
                        - --providers.docker.endpoint=tcp://socket-proxy:2375
                        - --providers.docker.exposedbydefault=false
                        - --entrypoints.web.address=:80
                        - --entrypoints.websecure.address=:443
                        - --certificatesresolvers.myresolver.acme.httpchallenge=true
                        - "--certificatesResolvers.le.acme.tlsChallenge=true"
                        - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
                        - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}
                        - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json

                labels:
                        - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
                        - traefik.http.routers.http_catchall.entrypoints=web
                        - traefik.http.routers.http_catchall.middlewares=https_redirect
                        - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
                        - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true

                volumes:
                        - ./letsencrypt:/letsencrypt
                ports:
                        - 80:80
                        - 443:443
                networks:
                        - proxy
                        - web_external

                depends_on:
                        - socket-proxy
networks:
        proxy:

        web_external:
                external: true
